apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply from: '../version.gradle'


android {
    compileSdkVersion sdkVersion

    def codeVersionPatch = versionCodeBuilder("version.properties")
    defaultConfig {
        minSdkVersion minSdkVersion
        targetSdkVersion sdkVersion
        versionCode 1
        versionName "$codeVersion_MAJOR.$codeVersion_MINOR.$codeVersionPatch"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "com.android.support:appcompat-v7:$androidSupportVersion"
    testImplementation "junit:junit:$jUnitVersion"
    androidTestImplementation "com.android.support.test:runner:$testRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"

    compileOnly "com.jakewharton.timber:timber:$timberVersion"
    compileOnly 'commons-codec:commons-codec:1.11'
    compileOnly "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    compileOnly "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compileOnly "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    compileOnly group: 'com.google.code.gson', name: 'gson', version: "$gsonVersion"

    implementation project(":core")
}
repositories {
    mavenCentral()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

tasks.withType(Javadoc) {
    enabled = false
}
kotlin {
    experimental {
        coroutines "enable"
    }
}
